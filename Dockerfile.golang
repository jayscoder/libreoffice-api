FROM golang:1.24-alpine AS builder

# 设置 Alpine Linux 使用国内镜像源
RUN echo "http://mirrors.aliyun.com/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/main/" > /etc/apk/repositories && \
    echo "http://mirrors.aliyun.com/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/community/" >> /etc/apk/repositories
    
# 安装必要的构建工具
RUN apk update && apk add --no-cache gcc musl-dev

# 设置工作目录
WORKDIR /app

# 复制go.mod和go.sum
COPY go.mod go.sum* ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY main.go ./

# 编译应用
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o libreoffice-api .

# 使用LibreOffice作为基础镜像
FROM docker-0.unsee.tech/linuxserver/libreoffice

# 设置 Alpine Linux 使用国内镜像源
RUN echo "http://mirrors.aliyun.com/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/main/" > /etc/apk/repositories && \
    echo "http://mirrors.aliyun.com/alpine/v$(cut -d'.' -f1,2 /etc/alpine-release)/community/" >> /etc/apk/repositories

# 设置工作目录
WORKDIR /app

# 从构建阶段复制编译好的二进制文件
COPY --from=builder /app/libreoffice-api /app/

# 创建数据和临时目录
RUN mkdir -p /app/data
RUN mkdir -p /app/tmp

# 设置卷
VOLUME /app/data
VOLUME /app/tmp

# 设置环境变量
ENV DEBUG=true
ENV SOFFICE_PATH=/usr/bin/soffice
ENV MAX_CONTENT_LENGTH=104857600
ENV FILE_EXPIRY_HOURS=24

# 暴露端口
EXPOSE 15000

# 启动服务
CMD ["/app/libreoffice-api"] 